{"version":3,"sources":["pages/Homepage/HomePageForm/homepage.js","pages/login/inputfield.js","pages/login/submitButton.js","pages/login/loginForm.js","pages/create_login/createLoginForm.js","pages/Homepage/Messages/messages.js","pages/Homepage/Messages/sendMsg.js","pages/Homepage/UserList/userList.js","pages/manage_acct/manageAcct.js","authRoute.js","App.js","index.js"],"names":["socket","InputField","className","type","this","props","placeholder","value","onChange","e","target","onKeyPress","keyPress","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","username","password","buttonDisabled","setState","property","val","trim","length","fetch","method","headers","body","JSON","stringify","res","json","result","success","localStorage","setItem","removeItem","resetForm","alert","msg","console","log","setInputValue","to","doLogin","CreateLoginForm","new_username","new_password","firstName","lastName","emailAddress","createLogin","submitNewLogin","Messages","message","member","content","currentMember","key","Math","random","style","backgroundColor","color","messages","map","m","renderMessage","SendMsg","preventDefault","onSendMessage","onSubmit","autoFocus","UserList","userList","users","id","user","HomePage","push","emit","currentChatId","isLogout","loading","manageAcct","getItem","randomColor","findID","userEntry","io","on","floor","toString","recipient","align","saveReciptient","exit","doLogout","ManageAcct","change_username","change_password","updateLogin","deleteAcct","authRoute","children","rest","render","location","pathname","from","App","isLoggedIn","persistState","parse","path","exact","component","observer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27d9533e.chunk.js","sourcesContent":["//=========================================================\n//homePage.js file\n//Written By: Keegan Kerns\n//Last Updated: Nov 27 2020\n//Purpose: renders the homePage for the user to send messages and edit their account\n//==========================================================\n\n\nimport React, { useState, useRef, useEffect}from 'react';\nimport {TextInput, Text, View} from 'react-native-web'\nimport {BrowserRouter as Router, Route, Redirect, Link}   from 'react-router-dom'\nimport InputField   from '/home/bishop/Documents/Web_App/frontend/src/pages/login/inputfield'\nimport SubmitButton from '/home/bishop/Documents/Web_App/frontend/src/pages/login/submitButton'\nimport io           from 'socket.io-client'\nimport Messages     from '/home/bishop/Documents/Web_App/frontend/src/pages/Homepage/Messages/messages'\nimport SendMsg      from '/home/bishop/Documents/Web_App/frontend/src/pages/Homepage/Messages/sendMsg'\nimport UserList     from '/home/bishop/Documents/Web_App/frontend/src/pages/Homepage/UserList/userList'\nimport './homepage.css'\nimport '/home/bishop/Documents/Web_App/frontend/src/pages/Homepage/Messages/messageFeed.css'\n\nlet socket; //this is the socket for the client\n\nclass HomePage extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      isLogout : false,\n      loading: true,\n      buttonDisabled: false,\n      manageAcct: false,\n      messages:[],\n      member: {\n        username: localStorage.getItem(\"userID\"),\n        color: this.randomColor(),\n      },\n      id: this.findID(),\n      currentChatId: '',\n      userEntry: ''\n    }\n  }\n\n  componentDidMount(){\n    //establishes a new socket and creates the connection to the server.\n      socket = io('localhost:5000');//for mobile you may have to switch to ip address\n      const id = this.state.member.username;\n      socket.emit(\"login\", id);\n  }\n\n  componentDidUpdate(){\n    //awaits incoming messages from another user. It will allocate the field currentChatId\n    //with their contact info for replies.\n    socket.on(\"message\", (messages, id) => {\n      this.setState({currentChatId: id});\n      console.log(this.state.currentChatId);\n      this.setState({messages: messages});\n    });\n  }\n\n  componentWillUnmount(){\n    //removes the socket from the list of connected sockets\n    socket.emit(\"logout\", this.state.id);\n  }\n//logs the user out by destroying their session that is logged in the DB and\n//sends them back to the login screen by making a request to the server.\n  async doLogout(){\n    try {\n      let res = await fetch('/logout',{\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      })\n      let result = await res.json();\n      if(result && result.success){\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"UserID\");\n        this.setState({isLogout: true});\n      }\n      else{\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"UserID\");\n      }\n\n    }\n    catch(e){\n      console.log(e)\n    }\n  }//logging out\n\n//finds the users ID from session data\n  async findID(){\n    try{\n      let res = await fetch('/getID',{\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/json'\n        }\n      })\n      let result = await res.json();\n      if(result.success && result.id != null){\n        this.setState({id: result.id});\n        console.log(result.id)\n      }\n    }\n    catch(e){\n      console.log(e)\n    }\n  }\n  //sends message to the desired user using socket io\n  onSendMessage = (message) =>{\n    const messages = this.state.messages;\n    messages.push({\n      content: message,\n      member: this.state.member\n    })\n    console.log(messages)\n    socket.emit(\"message\", messages, this.state.currentChatId);\n    this.setState({messages: messages});\n  }\n\n  //sends user to the manage account screen which is only available if logged in.\n  async manageAcct(){\n\n    this.setState({\n      buttonDisabled: true\n    });\n\n    this.setState({\n      manageAcct: true\n    });\n  }\n\n  //avatar color\n  randomColor(){\n      return '#' + Math.floor(Math.random()* 0xFFFFFF).toString(16);\n    }\n\n  //cleans up the users entry for easy searching\n  setInputValue(property, val){\n    val = val.trim();\n    this.setState({\n      [property]: val\n    })\n  }\n  //used for finding the recipient that you want to send a messages to\n  async saveReciptient(){\n    try{\n      let res = await fetch(\"/findID\", {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        },\n        body:JSON.stringify({\n          recipient: this.state.currentChatId\n        })\n      })\n      let result = await res.json();\n      if(result.username === this.state.currentChatId){\n        this.setState({currentChatId: this.state.currentChatId});\n        this.setState({buttonDisabled: true});\n      }\n      else{\n        alert(result.msg);\n      }\n\n    }\n    catch(e){\n      console.log(e);\n    }\n  }\n  //ends the conversation and clears the screen of old messages from that chat.\n  async exit(){\n    this.setState({buttonDisabled: false });\n    this.setState({messages:[]});\n    this.setState({currentChatId: ''});\n  }\n  //renders the homepage\n  render(){\n    if(this.state.isLogout){\n      return <Redirect to= '/'/>\n    }\n    else{\n      return (\n            <div className = \"HomePage\">\n              <div className = \"contacts\">\n                <UserList/>\n                </div>\n              <div className= \"MessageFeed\">\n                <Messages\n                  messages={this.state.messages}\n                  currentMember={this.state.member}\n                  />\n                <SendMsg\n                  onSendMessage={this.onSendMessage}\n                  placeholder = \"Enter a message... \"\n                  />\n                </div>\n                <div className = \"userEntry\" align= \"center\">\n                  <InputField\n                    type = 'text'\n                    placeholder = 'Search User'\n                    value = {this.state.currentChatId ? this.state.currentChatId : ''}\n                    onChange = {(val) => this.setInputValue('currentChatId', val) }/>\n\n                  <SubmitButton\n                    text = 'Start Chat'\n                    disabled = {this.state.buttonDisabled}\n                    onClick = {() => this.saveReciptient()}\n                  />\n\n                  <SubmitButton\n                    text = 'Exit Conversation'\n                    disabled = {false}\n                    onClick = {() => this.exit()}\n                  />\n              </div>\n              <div className = \"accountButtons\">\n                <Link to= {`/manageAcct`}>\n                  <SubmitButton\n                    text = 'Manage Account'\n                    disabled = {false}\n                    onClick = {() => this.manageAcct()}\n                    />\n                  </Link>\n\n                <Link to ={`/`}>\n                  <SubmitButton\n                    text = 'Log out'\n                    disabled = {this.state.buttonDisabled}\n                    onClick = {() => this.doLogout()}\n                    />\n                </Link>\n              </div>\n            </div>\n      );\n    }\n  }\n}\nexport default HomePage\n","//=========================================================\n//inputfield.js file\n//Written By: Keegan Kerns\n//Last Updated: Nov 27 2020\n//Purpose: renders the input bars for many of the Form components\n//==========================================================\nimport React, { useState, useRef, useEffect}from 'react';\n\nclass InputField extends React.Component{\n  render(){\n    return (\n      <div className = \"inputField\">\n\n        <input\n          className = 'input'\n          type= {this.props.type}\n          placeholder= {this.props.placeholder}\n          value = {this.props.value}\n          onChange = {(e) =>this.props.onChange(e.target.value)}\n          onKeyPress= {this.keyPress}\n          />\n      </div>\n    );\n  }\n}\n\nexport default InputField;\n","//=========================================================\n//submitButton.js file\n//Written By: Keegan Kerns\n//Last Updated: Nov 27 2020\n//Purpose: renders the buttons for many of the forms\n//==========================================================\n\nimport React, { useState, useRef, useEffect} from 'react';\n\nclass SubmitButton extends React.Component{\n  render(){\n    return (\n      <div className = \"submitButton\">\n        <button\n          className = 'btn'\n          disabled = {this.props.disabled}\n          onClick = {() => this.props.onClick()}\n        >\n          {this.props.text}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default SubmitButton;\n","//=========================================================\n//loginForm.js file\n//Written By: Keegan Kerns\n//Last Updated: Nov 27 2020\n//Purpose: renders the login form for user to login.\n//==========================================================\n\n//imports\nimport React, { useState, useRef, useEffect} from 'react';\nimport {Link}       from 'react-router-dom'\nimport InputField   from './inputfield'\nimport SubmitButton from './submitButton'\nimport './LoginForm.css';\n\nclass LoginForm extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      buttonDisabled: false\n    }\n  }\n\n  resetForm(){\n    this.setState({\n      username: '',\n      password: '',\n      buttonDisabled: false\n    })\n  }//end of reset form\n\n\n  setInputValue(property, val){\n    val = val.trim();\n    if(val.length > 20){\n      return;\n    }\n    this.setState({\n      [property]: val\n    })\n  }// formats the input\n\n\n//makes request to the server to do authenication\n  async doLogin(){\n    if(!this.state.username){\n      return;\n    }\n    if(!this.state.password){\n      return;\n    }\n    this.setState({buttonDisabled: true});\n\n    try {\n      let res = await fetch('/login',{\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      })\n      let result = await res.json()\n      if(result && result.success){\n        localStorage.setItem(\"token\", \"T\");\n        localStorage.setItem(\"userID\", result.username)\n      }\n      else if(result && result.success === false){\n        localStorage.removeItem(\"token\");\n        this.resetForm();\n        alert(result.msg)\n      }\n    }\n\n    catch(e){\n        console.log(e);\n        localStorage.removeItem(\"token\");\n        this.resetForm();\n    }\n\n  }//end of doLogin()\n\n//renders the createLogin Page\n  render(){\n    return (\n      <div className = \"container\">\n      <div className = \"loginform\">\n        HEX CHAT\n          <InputField\n            type = 'text'\n            placeholder = 'username'\n            value = {this.state.username ? this.state.username : ''}\n            onChange = {(val) => this.setInputValue('username', val) }/>\n\n          <InputField\n            type = 'password'\n            placeholder = 'password'\n            value = {this.state.password ? this.state.password : ''}\n            onChange = {(val) => this.setInputValue('password', val) }/>\n\n          <Link to ={`/home`}>\n            <SubmitButton\n              text = 'Login'\n              disabled = {this.state.buttonDisabled}\n              onClick = {() => this.doLogin()}\n              />\n          </Link>\n          <Link to={`/createLogin`}>\n            <SubmitButton\n              text = {'Create Login'}\n              disabled = {false}\n              //onClick = {() => Userstore.createLogin = true}\n              />\n          </Link>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","//=========================================================\n//createLoginForm.js file\n//Written By: Keegan Kerns\n//Last Updated: Nov 27 2020\n//Purpose: renders the login form for user to create a new login.\n//==========================================================\n\n//imports\nimport React, {useState, useRef, useEffect}from 'react';\nimport InputField   from '/home/bishop/Documents/Web_App/frontend/src/pages/login/inputfield'\nimport SubmitButton from '/home/bishop/Documents/Web_App/frontend/src/pages/login/submitButton'\nimport {Link}       from 'react-router-dom'\nimport './createLogin.css'\n\nclass CreateLoginForm extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      new_username: '',\n      new_password: '',\n      firstName: '',\n      lastName: '',\n      emailAddress:'',\n      buttonDisabled: false,\n      createLogin: true\n    }\n  }//end of constructor\n\n  resetForm(){\n    this.setState({\n      new_username: '',\n      new_password: '',\n      firstName: '',\n      lastName: '',\n      emailAddress:'',\n      buttonDisabled: false\n    });\n  }//end of reset form\n\n  setInputValue(property, val){\n    val = val.trim();\n    if(val.length > 20){\n      return;\n    }\n    this.setState({\n      [property]: val\n    })\n  }//end of set input\n\n//submits a request to the server via json.\n  async submitNewLogin(){\n    if(!this.state.new_username){\n      return\n    }\n    if(!this.state.new_password){\n      return\n    }\n    if(!this.state.firstName){\n      return\n    }\n    if(!this.state.lastName){\n      return\n    }\n    if(!this.state.emailAddress){\n      return\n    }\n\n    this.setState({\n      buttonDisabled: true\n    })\n//collects state information to then submit to the\n//database conncection on the server\n  try {\n    let res = await fetch('/createLogin',{ //in router.js there is the req processing.\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        new_username:     this.state.new_username,\n        new_password:     this.state.new_password,\n        firstName:    this.state.firstName,\n        lastName:     this.state.lastName,\n        emailAddress: this.state.emailAddress\n      })\n    })\n    let result = await res.json()\n    if(result && result.success){\n      this.setState({createLogin: true});\n    }\n\n    else if(result && result.success === false){\n      this.resetForm()\n      alert(result.msg)\n    }\n  }\n  catch(e){\n      console.log(e);\n      this.resetForm();\n  }\n}\n\n\n//renders the login form\nrender(){\n  return (\n    <div className = \"container\">\n    <div className = \"CreateLoginForm\">\n      HEX CHAT\n        <InputField\n          type = 'text'\n          placeholder = 'New Username'\n          value = {this.state.new_username ? this.state.new_username : ''}\n          onChange = {(val) => this.setInputValue('new_username', val) }/>\n\n        <InputField\n          type = 'password'\n          placeholder = 'New password'\n          value = {this.state.new_password ? this.state.new_password : ''}\n          onChange = {(val) => this.setInputValue('new_password', val) }/>\n\n        <InputField\n          type = 'text'\n          placeholder = 'First Name'\n          value = {this.state.firstName ? this.state.firstName : ''}\n          onChange = {(val) => this.setInputValue('firstName', val) }/>\n\n        <InputField\n          type = 'text'\n          placeholder = 'Last Name'\n          value = {this.state.lastName ? this.state.lastName : ''}\n          onChange = {(val) => this.setInputValue('lastName', val) }/>\n\n        <InputField\n          type = 'text'\n          placeholder = 'Email Address'\n          value = {this.state.emailAddress ? this.state.emailAddress : ''}\n          onChange = {(val) => this.setInputValue('emailAddress', val) }/>\n        <Link to={`/`}>\n        <SubmitButton\n          text = 'Submit'\n          disabled = {this.state.buttonDisabled}\n          onClick = {() => this.submitNewLogin()}\n          />\n        </Link>\n\n        <Link to= {`/`}>\n        <SubmitButton\n          text = {'Go back'}\n          disabled = {false}\n          onClick = {() => this.setState({createLogin: false})}\n          />\n        </Link>\n    </div>\n    </div>\n  );\n  }\n}//end of CreateLoginForm Class\nexport default CreateLoginForm;\n","//=========================================================\n//messages.js file\n//Written By: Keegan Kerns\n//Last Updated: Nov 27 2020\n//Purpose: renders the messages\n//==========================================================\n\nimport React, { useState, useRef, useEffect, Component} from 'react';\nimport InputField   from '/home/bishop/Documents/Web_App/frontend/src/pages/login/inputfield'\nimport SubmitButton from '/home/bishop/Documents/Web_App/frontend/src/pages/login/submitButton'\nimport './messages.css'\n\n//Dummy test data going to use chat kit to finalize formatting\n\nclass Messages extends React.Component{\n  //renders an indivdual message that is added to the messages list\n  renderMessage(message){\n    const {member, content} = message;\n    const {currentMember} = this.props;\n    const sender = member.username === currentMember.username;\n    const className = sender ?\n      \"Messages-message currentMember\" : \"Messages-message\";\n      return(\n        <li key= {(Math.random()* 20)} className = {className}>\n          <span\n            className=\"avatar\"\n            style = {{backgroundColor: member.color}}\n            />\n          <div className = \"Message-content\">\n            <div className = \"username\">\n              {member.username}\n            </div>\n            <div className = \"text\">{content}</div>\n          </div>\n        </li>\n      );\n  }\n\n  //renders the message list for a specific chat\n  render(){\n    const {messages} = this.props;\n    return (\n      <ul className = 'messages-list'>\n        {messages.map(m => this.renderMessage(m))}\n      </ul>\n    )\n  }\n}\nexport default Messages\n","//=========================================================\n//sendMsg.js file\n//Written By: Keegan Kerns\n//Last Updated: Nov 27 2020\n//Purpose: renders the text bar for entring messages\n//==========================================================\n\nimport React, { useState, useRef, useEffect, Component}from 'react';\n\nclass SendMsg extends React.Component{\n  state={\n    text:\"\"\n  }\n  //detects change in the input bar\n  onChange(e){\n    this.setState({text: e.target.value})\n  }\n  //detects submission and sends the current state\n  onSubmit(e){\n    e.preventDefault();\n    this.setState({text:\"\"});\n    this.props.onSendMessage(this.state.text);\n  }\n  //renders the textbar\n  render(){\n    return(\n      <div className= \"sendMsg\">\n        <form onSubmit={e => this.onSubmit(e)}>\n          <input\n            onChange = {(e) => this.onChange(e)}\n            value= {this.state.text}\n            placeholder = {this.props.placeholder}\n            autoFocus = {true}\n          />\n          </form>\n      </div>\n    )\n  }\n}//end of sendMsg class\n\nexport default SendMsg;\n","//=========================================================\n//userList.js file\n//Written By: Keegan Kerns\n//Last Updated: Nov 27 2020\n//Purpose: renders the text bar for entring messages\n//==========================================================\n\nimport React, {Component} from \"react\";\nimport './userList.css'\n\nclass UserList extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      userList:[]\n    }\n  }\n  //gets a complete list of users from the server\n  async componentDidMount(){\n    try{\n      let res= await fetch('/contacts', {\n        method:'post',\n        headers:{\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n      let result = await res.json();\n      if(result && result.success){\n        console.log(result.users);\n        this.setState({userList: result.users});\n      }\n    }\n    catch(e){\n      console.log(e);\n    }\n  }\n  //renders the list so that the user knows who they can messages\n  render(){\n    console.log(this.state.userList);\n    return(\n      <div className = \"list\">\n        <ul className = \"list-group\" id= \"contact-list\">\n        <p>Contacts</p>\n        {this.state.userList.map((user) =>\n          <li key= {(Math.random()* 20)} className=\"list-group-item\">\n            {user.username}\n          </li>\n        )}\n        </ul>\n      </div>\n    )\n  }\n\n}\nexport default UserList;\n","//=========================================================\n//manageAcct.js file\n//Written By: Keegan Kerns\n//Last Updated: Nov 27 2020\n//Purpose: renders the manageAcctForm for modifiying\n//         information and deleteing account\n//==========================================================\n\nimport React, { useState, useRef, useEffect}from 'react';\nimport {Redirect, Link}   from 'react-router-dom'\nimport InputField   from '/home/bishop/Documents/Web_App/frontend/src/pages/login/inputfield'\nimport SubmitButton from '/home/bishop/Documents/Web_App/frontend/src/pages/login/submitButton'\nimport './manageAcct.css'\n\nclass ManageAcct extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      change_username: '',\n      change_password: '',\n      firstName: '',\n      lastName:'',\n      emailAddress: '',\n      buttonDisabled: false,\n      isLogout: false\n    }\n  }\n\nasync deleteAcct(){\n  try{\n    let res = await fetch('/delete', {\n      method:'post',\n      headers:{\n        'Accept': 'application/json',\n        'Content-type': 'application/json'\n      }\n    });\n    let result = await res.json();\n    if(result && result.success){\n      alert(result.msg);\n      this.doLogout();\n    }\n    else{\n      alert(result.msg);\n    }\n  }\n  catch(e){\n    console.log(e);\n  }\n}\n\nasync doLogout(){\n  try {\n    let res = await fetch('/logout',{\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/json'\n      }\n    })\n    let result = await res.json();\n    if(result && result.success){\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"UserID\");\n      this.setState({isLogout: true});\n    }\n    else{\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"UserID\");\n    }\n\n  }\n  catch(e){\n    console.log(e)\n  }\n}//logging out\n\nresetForm(){\n  this.setState({\n    change_username: '',\n    change_password: '',\n    firstName: '',\n    lastName: '',\n    emailAddress:'',\n    buttonDisabled: false\n  });\n}\n\nsetInputValue(property, val){\n  val = val.trim();\n  if(val.length > 20){\n    return;\n  }\n  this.setState({\n    [property]: val\n  })\n}//end of set input\n\nasync updateLogin(){\n  if(!this.state.change_username){\n    return\n  }\n  if(!this.state.change_password){\n    return\n  }\n  if(!this.state.firstName){\n    return\n  }\n  if(!this.state.lastName){\n    return\n  }\n  if(!this.state.emailAddress){\n    return\n  }\n\n  this.setState({\n    buttonDisabled: true\n  })\n\ntry {\n  let res = await fetch('/manageAcct',{\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      change_username:     this.state.change_username,\n      change_password:     this.state.change_password,\n      firstName:           this.state.firstName,\n      lastName:            this.state.lastName,\n      emailAddress:        this.state.emailAddress\n    })\n  })\n  let result = await res.json()\n  if(result && result.success){\n    alert(result.msg);\n    this.resetForm();\n    this.doLogout();\n  }\n\n  else if(result && result.success === false){\n    this.resetForm();\n    alert(result.msg);\n  }\n}\ncatch(e){\n    console.log(e);\n    this.resetForm();\n}\n}//end of update\n\nrender(){\n\n  return(\n    <div className = \"container\">\n    Please fill ALL fields (if not applicable to change just type in what it is).\n    <div className = \"ManageAcct\">\n    <InputField\n      type = 'text'\n      placeholder = 'Update Username'\n      value = {this.state.change_username ? this.state.change_username : ''}\n      onChange = {(val) => this.setInputValue('change_username', val) }/>\n\n    <InputField\n      type = 'password'\n      placeholder = 'Update password'\n      value = {this.state.change_password ? this.state.change_password : ''}\n      onChange = {(val) => this.setInputValue('change_password', val) }/>\n\n    <InputField\n      type = 'text'\n      placeholder = 'First Name'\n      value = {this.state.firstName ? this.state.firstName : ''}\n      onChange = {(val) => this.setInputValue('firstName', val) }/>\n\n    <InputField\n      type = 'text'\n      placeholder = 'Last Name'\n      value = {this.state.lastName ? this.state.lastName : ''}\n      onChange = {(val) => this.setInputValue('lastName', val) }/>\n\n    <InputField\n      type = 'text'\n      placeholder = 'Email Address'\n      value = {this.state.emailAddress ? this.state.emailAddress : ''}\n      onChange = {(val) => this.setInputValue('emailAddress', val) }/>\n\n    <SubmitButton\n      text = 'Update'\n      disabled = {this.state.buttonDisabled}\n      onClick = {() => this.updateLogin()}\n      />\n    <Link to = {`/`}>\n    <SubmitButton\n      text = 'Delete Account'\n      disabled = {this.state.buttonDisabled}\n      onClick = {() => this.deleteAcct()}\n      />\n    </Link>\n    <Link to={`/home`}>\n    <SubmitButton\n      text = {'Go back'}\n      disabled = {this.state.buttonDisabled}\n      />\n    </Link>\n    </div>\n    </div>\n    );\n  }\n}\nexport default ManageAcct\n","//=========================================================\n//authRoute.js file\n//Written By: Keegan Kerns\n//Last Updated: Nov 27 2020\n//Purpose: Creates restricted Route for Router in App.js for\n//         authentication purposes.\n//==========================================================\n\nimport React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\n//takes in a path, and a component and checks the localStorage item called \"token\"\n//if it fails then redirects back to root aka the login page\nconst authRoute = ({children, ...rest}) => {\n  return(\n    <Route\n      {...rest}\n      render={({ location }) =>\n        localStorage.getItem(\"token\") ? (\n          children\n        ):(\n          <Redirect\n            to={{pathname: '/',\n            state: {from: location}\n          }}\n          />\n        )\n      }\n    />\n  );\n};\nexport default authRoute;\n","//=========================================================\n//App.js file\n//Written By: Keegan Kerns\n//Last Updated: Nov 27 2020\n//Purpose: Servers as main start point for Messaging app\n//==========================================================\n\n\n//imports\nimport React, {useState, useRef, useEffect}  from 'react';\nimport {BrowserRouter as Router, Route, Link}      from 'react-router-dom'\nimport { observer }                          from 'mobx-react'\nimport LoginForm                             from './pages/login/loginForm'\nimport SubmitButton                          from './pages/login/submitButton'\nimport CreateLoginForm                       from './pages/create_login/createLoginForm';\nimport HomePage                              from './pages/Homepage/HomePageForm/homepage'\nimport ManageAcct                            from './pages/manage_acct/manageAcct'\nimport AuthRoute                             from './authRoute'\nimport './App.css'\n\n//when making changes here please run npm build then paste updated folder to the back end to apply changes\n\nclass App extends React.Component {\n\n  state = {\n    isLoggedIn: false\n  }\n\n//When component Instanciates componentDidMount() serves as state checker\n  async componentDidMount(){\n    //communicates to the server about if the page is logged in or not. Used for peristance sessions\n    try {\n      let res = await fetch('/isloggedIn',{\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n      let result = await res.json();\n      if(result && result.success){\n        const persistState = localStorage.getItem(\"token\");\n        this.setState({isLoggedIn: true});\n        if(persistState){\n          try{\n            this.setState(JSON.parse(persistState));\n          }catch(e){}\n        }\n      }\n      else{\n        this.setState({isLoggedIn: false});\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"userID\");\n      }\n\n    }\n    catch(e){\n      this.setState({isLoggedIn: false});\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"userID\");\n    }\n  }//logging in\n\n//render function creates the Router for the rest of the system. That way user can navigate to each componenet\n  render(){\n    return(\n    <Router>\n      <Route path= '/' exact component = {LoginForm}/>\n      <Route path= '/createLogin' exact component= {CreateLoginForm}/>\n      <AuthRoute path= '/home'>\n        <HomePage/>\n      </AuthRoute>\n      <AuthRoute path= '/manageAcct'>\n        <ManageAcct/>\n      </AuthRoute>\n    </Router>\n    );\n  }//end of render\n}//end of App class\n\nexport default observer(App);\n","//=========================================================\n//index.js file\n//Written By: Keegan Kerns\n//Last Updated: Nov 27 2020\n//Purpose: This is reacts start point for rendering the app components,\n//         server class references here.\n//==========================================================\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n//Renders the app enviornment\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}